from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,    
    ContextTypes,
)
from decouple import config


BOT_TOKEN = config("BOT_TOKEN")

# –•—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
user_names = {}
user_states = {}


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user = update.message.from_user
    user_name = user.username or user.first_name or "–¥—Ä—É–≥"
    user_names[chat_id] = user_name

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = (
    f"–ü—Ä–∏–≤–µ—Ç, @{user_name}!\n"
    "–ë—É–¥—É—â–∏–π –∫—É—Ä—å–µ—Ä –Ø–Ω–¥–µ–∫—Å –ï–¥—ã!\n"
    "–í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã —Å–º–æ–∂–µ—à—å –≤—Å—ë —É–∑–Ω–∞—Ç—å –æ–± —ç—Ç–æ–π —Ä–∞–±–æ—Ç–µ\n"
    "–∏ —É–∂–µ –∑–∞–≤—Ç—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑."
    )
    keyboard = create_main_keyboard()

    # –∫–∞—Ä—Ç–∏–Ω–∫—É
    try:
        await context.bot.send_photo(chat_id, photo=open("preview.png", "rb"))
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")

    # —Ç–µ–∫—Å—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await context.bot.send_message(chat_id, text=welcome_text, reply_markup=keyboard)
    user_states[chat_id] = "MAIN_MENU"


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    await context.bot.send_message(chat_id, "–ß—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.")


async def registration(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –Ω–∏–∂–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
    keyboard = create_registration_keyboard()
    await context.bot.send_message(chat_id, text=text, reply_markup=keyboard)
    user_states[chat_id] = "REGISTRATION_MENU"


async def correct_registration(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = (
    "üîë –ù–∞—à–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚Äî https://ya.cc/6MqBN5\n"
    "üí∏ –ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å –Ω–∞–º–∏!\n"
    "üöÄ –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã! "
    )
    await context.bot.send_message(chat_id, text=text, reply_markup=add_back_button())
    user_states[chat_id] = "CORRECT_REGISTRATION"


async def detailed_registration(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = (
    "‚ú® –°—Ç–∞—Ç—å –Ω–∞—à–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º ‚Äî –ø—Ä–æ—Å—Ç–æ! ‚ú® –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å –Ω–∞–º–∏, –ø—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –Ω–∞—à–µ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –≤ —Ä–∞–∑–¥–µ–ª–µ '–ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–¢–¨–°–Ø'. –≠—Ç–æ –Ω–µ –æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Ç–æ–≥–æ , —á—Ç–æ–±—ã –∑–∞–∫—Ä–µ–ø–∏—Ç—å—Å—è –∏–º–µ–Ω–Ω–æ –∑–∞ –Ω–∞–º–∏ –∏ –≤ –¥–∞–ª—å–Ω–µ—à–µ–π–º –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å –∑–∞ –∑–∞–∫–∞–∑—ã ;)\n"
    "üë• –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã —Å—Ç–∞–Ω–µ—Ç–µ –Ω–∞—à–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –∏ —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å—ã –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã!üí° –ü—Ä–æ—Å—Ç–æ–π —à–∞–≥ ‚Äî –∏ –≤—ã –Ω–∞ –ø—É—Ç–∏ –∫ –æ—Ç–ª–∏—á–Ω—ã–º –∑–∞—Ä–∞–±–æ—Ç–∫–∞–º!–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã! üí™ –û—Ç–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤! üë®‚Äçüíª 30 –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ ‚Äî 2,000 —Ç—ã—Å. üîß 70 –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ ‚Äî 5,000 —Ç—ã—Å. üèÜ –ë–æ–ª–µ–µ 110 –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ ‚Äî 7,000 —Ç—ã—Å.\n"
    "P.S (–≤—Å–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ , –≤—ã—à–µ –±—ã–ª–∏ —É–∫–∞–∑–∞–Ω—ã –∞–∫—Ç—É–∞–ª—å–Ω–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –º.–æ , –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö –±–æ–Ω—É—Å –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ ;) ")
    await context.bot.send_message(chat_id, text=text, reply_markup=add_back_button())
    user_states[chat_id] = "DETAILED_INFO"


async def about_us(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = (
    "‚ùì –ù–∞–≤–µ—Ä–Ω—è–∫–∞ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫ –≤–æ–ø—Ä–æ—Å: –ö—Ç–æ –º—ã —Ç–∞–∫–∏–µ? –° —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—á–∞–µ–º!\n"
    "üôå –ú—ã ‚Äî –¥–µ–π—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä—Ç–Ω–µ—Ä –Ø–Ω–¥–µ–∫—Å –ï–¥—ã –ø–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é –∫—É—Ä—å–µ—Ä–æ–≤, –∏ –Ω–∞—à–∞ —Ü–µ–ª—å ‚Äî –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å –Ω–∞–º–∏!\n"
    ". üíº –ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º?\n"
    "- üéÅ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!\n"
    "- üìö –ü–æ–¥–µ–ª–∏–º—Å—è –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Ñ–∏—à–∫–∞–º–∏ –∏ –ª–∞–π—Ñ—Ö–∞–∫–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã.\n"                                                    
    "- ü§ù –ë—É–¥–µ–º —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å –≤–∞—Å –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ, –ø–æ–º–æ–≥–∞—è –æ—Å–≤–æ–∏—Ç—å—Å—è –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —É—Å–ø–µ—Ö–∞!–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à —Ç—Ä—É–¥ –∏ –≥–æ—Ç–æ–≤—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—Å –Ω–∞ –ø—É—Ç–∏ –∫ –≤—ã–≥–æ–¥–Ω–æ–º—É –∑–∞—Ä–∞–±–æ—Ç–∫—É. –†–µ–≥—Å–∏—Ç—Ä–∏–π—Ç–µ—Å—å –ø–æ —Å—Å—ã–ª–∫–µ –≤ —Ä–∞–∑–¥–µ–ª–µ '–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø' –∏ –Ω–∞—á–Ω–∏—Ç–µ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è! üöÄ"
    )

    try:
        await context.bot.send_photo(chat_id, photo=open("about_us.png", "rb"))
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
    await context.bot.send_message(chat_id, text=text, reply_markup=add_back_button())





async def unknown_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    await context.bot.send_message(chat_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ß—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ /start.")


def add_back_button():
    keyboard = [[KeyboardButton("–ù–∞–∑–∞–¥")]]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)


def create_main_keyboard():
    keyboard = [
        [KeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"), KeyboardButton("–ü–æ–¥—Ä–æ–±–Ω—ã–µ —É—Å–ª–æ–≤–∏—è")],
        [KeyboardButton("–û –Ω–∞—Å"), KeyboardButton("–ü–æ–º–æ—â—å")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)


def create_registration_keyboard():
    keyboard = [
        [KeyboardButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"), KeyboardButton("–ü–æ–¥—Ä–æ–±–Ω—ã–µ —É—Å–ª–æ–≤–∏—è")],
        [KeyboardButton("–ù–∞–∑–∞–¥")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)



async def help_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "HELP_MENU" –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_states[chat_id] = "HELP_MENU"

    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    text = (
    "üí¨ –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä ‚Äî @yandex_helper1\n"
    "ü§ù –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —É—é—Ç–Ω–æ–º—É —á–∞—Ç—É —Å –∫—É—Ä—å–µ—Ä–∞–º–∏: https://t.me/+uhKGYmcOyigzNDAy –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –æ–±—â–µ–Ω–∏–µ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã! üåü"
    )
    await context.bot.send_message(chat_id, text=text, reply_markup=add_back_button())


async def handle_back(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    state = user_states.get(chat_id, "MAIN_MENU")

    if state == "HELP_MENU":
        await start(update, context)
    elif state in ["CORRECT_REGISTRATION", "DETAILED_INFO"]:
        await registration(update, context)
    elif state == "REGISTRATION_MENU":
        await start(update, context)
    else:
        await start(update, context)


def main():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"), registration))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"), correct_registration))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–ü–æ–¥—Ä–æ–±–Ω—ã–µ —É—Å–ª–æ–≤–∏—è"), detailed_registration))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–û –Ω–∞—Å"), about_us))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–ü–æ–º–æ—â—å"), help_message))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–ù–∞–∑–∞–¥"), handle_back)) 
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, unknown_command))

    print("–∑–∞–ø—É—â–µ–Ω!")
    application.run_polling()



 
if __name__ == "__main__":
    main()
